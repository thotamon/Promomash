// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Promomash.UserRepository.Repository;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241110153656_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Country1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Country2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Country3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Country4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Country5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Country6"
                        });
                });

            modelBuilder.Entity("Library.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Province1.1"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Province2.1"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Province2.2"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Province3.1"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            Name = "Province3.2"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 3,
                            Name = "Province3.3"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 4,
                            Name = "Province4.1"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 4,
                            Name = "Province4.2"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 4,
                            Name = "Province4.3"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 4,
                            Name = "Province4.4"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 5,
                            Name = "Province5.1"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 5,
                            Name = "Province5.2"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 5,
                            Name = "Province5.3"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 5,
                            Name = "Province5.4"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 5,
                            Name = "Province5.5"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 6,
                            Name = "Province6.1"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 6,
                            Name = "Province6.2"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 6,
                            Name = "Province6.3"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 6,
                            Name = "Province6.4"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 6,
                            Name = "Province6.5"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 6,
                            Name = "Province6.6"
                        });
                });

            modelBuilder.Entity("Library.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Agree")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Library.Entities.Province", b =>
                {
                    b.HasOne("Library.Entities.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Library.Entities.User", b =>
                {
                    b.HasOne("Library.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Library.Entities.Country", b =>
                {
                    b.Navigation("Provinces");
                });
#pragma warning restore 612, 618
        }
    }
}
